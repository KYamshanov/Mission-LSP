CREATE TABLE collection (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    name TEXT NOT NULL
);

CREATE TABLE collectionWords (
   collectionId INTEGER NOT NULL,
   wordId INTEGER NOT NULL,
   FOREIGN KEY(collectionId) REFERENCES collection(id) ON DELETE CASCADE,
   FOREIGN KEY(wordId) REFERENCES dictionary(id) ON DELETE CASCADE
);

CREATE TABLE dictionary (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    word TEXT NOT NULL,
    translate TEXT NOT NULL,
    imageUrl TEXT
);

CREATE TABLE testing (
   wordId INTEGER NOT NULL UNIQUE ,
   checkCount INTEGER NOT NULL,
   successCount INTEGER NOT NULL,
   lastCheckDate INTEGER NOT NULL,
   FOREIGN KEY(wordId) REFERENCES dictionary(id) ON DELETE CASCADE
);

lastInsertRowId:
SELECT last_insert_rowid();

selectAllCollections:
SELECT *
FROM collection;

selectCollectionDictonary:
SELECT *
FROM collectionWords
INNER JOIN dictionary
ON collectionWords.wordId == dictionary.id
WHERE collectionId = ?;

selectCollectionById:
SELECT *
FROM collection
WHERE id = ?;

insertCollection:
INSERT INTO collection (name)
VALUES (?);

insertDictionary:
INSERT INTO dictionary (word,translate,imageUrl)
VALUES (?,?, ?);

insertCollectionWords:
INSERT INTO collectionWords (collectionId,wordId)
VALUES (?,?);

selectCollectionDictonaryWithTesting:
SELECT *
FROM collectionWords
INNER JOIN dictionary
ON collectionWords.wordId == dictionary.id
LEFT JOIN testing
ON testing.wordId == dictionary.id
WHERE collectionId = ?;

selectTesting:
SELECT *
FROM testing
WHERE wordId = ?;

updateTesting:
UPDATE testing
SET checkCount = ?, successCount= ?, lastCheckDate= ?
WHERE wordId = ?;

insertTesting:
INSERT INTO testing (wordId, checkCount,successCount, lastCheckDate)
VALUES (?,?,?,?);

setWordImageUrl:
UPDATE dictionary
SET imageUrl = ?
WHERE id = ?;

selectWord:
SELECT *
FROM dictionary
WHERE id = ?;

deleteWord:
DELETE FROM dictionary
WHERE id = ?;
